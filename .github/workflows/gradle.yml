# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Spring Boot & Gradle CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# permissions:
 # contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        # distribution: 'temurin'
    
    
    - name : Grant execute permission for gradlew
      run : chmod +x gradlew
    
    # Build - 여기까지가 CI 부분. 그 이후에는 CD 부분
    - name: Build with Gradle
      run : ./gradlew clean build
      
    # 전송할 파일을 담을 디렉토리 생성
    - name : Make Directory for deliver
      run : mkdir -p deploy
      
    # Jar 파일 Copy
    - name : Copy Jar
      run : cp ./build/libs/*.jar ./deploy
      
    # appspec.yml 파일을 deploy에 복사
    # - name : Copy appspec.yml
    #  run : cp appspec.yml ./deploy
      
    # 압축파일 형태로 전달
    - name : Make zip file
      run : zip -r -qq -j ./springboot-intro-build.zip ./deploy
      
    # S3 Bucket으로 copy
    #- name : Deploy
    #  uses : aws-actions/configure-aws-credentials@v1
    #  with : 
    #    aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #    aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #    aws-region: ap-northeast-2 
        
    - name : Deliver to S3
      env : 
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      # run : aws s3 cp --region ap-northeast-2 --acl private ./springboot-intro-build.zip s3://springboot-intro-build/
      run : aws s3 cp --region ap-northeast-2 --acl private ./springboot-intro-build.zip s3://practice-2-build/

    # Deploy
    # - name : Deploy 
    #  env : 
    #    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #  run : aws deploy create-deployment --application-name freelec-springboot2-webservice --deployment-group-name freelec-springboot2-webservice-group --file-exists-behavior OVERWRITE --s3-location bucket=hong-build,key=springboot-intro-build.zip,bundleType=zip --region ap-northeast-2






